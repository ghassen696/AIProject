version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - monitoring-net

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://11.247.150.75:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - monitoring-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - monitoring-net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - monitoring-net
    
  #spark:
  #  image: bitnami/spark:3.4.1
  #  container_name: spark
  #  environment:
  #    - SPARK_MODE=client
  #  networks:
   #   - monitoring-net
   # depends_on:
   #   - kafka
   #   - elasticsearch
   # volumes:
   #   - ./spark:/opt/spark-app  # You can put your scripts here
   # entrypoint: [ "sleep", "infinity" ]  # keep it running for interactive use 
    
  #grafana:
  #  image: grafana/grafana:latest
  #  container_name: grafana
  #  ports:
  #    - "3000:3000"
  #  depends_on:
  #    - elasticsearch
  #  networks:
  #    - monitoring-net
  #  volumes:
  #    - grafana-storage:/var/lib/grafana
volumes:
  kafka-data:
  esdata:
  #grafana-storage:
networks:
  monitoring-net:
